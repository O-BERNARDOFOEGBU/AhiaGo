name: Smart Daily Commits

on:
  schedule:
    # Run once daily at midnight UTC (01:00 Lagos)
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  automate_commits:
    runs-on: ubuntu-latest
    timeout-minutes: 350  # allows long sleep periods

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git identity
        run: |
          git config user.name "O-BERNARDOFOEGBU"
          git config user.email "obinnaofoegbu71@gmail.com"

      - name: Generate commits across the day
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          touch daily-log.md
          DAY=$(date -u +"%d")
          DATE=$(date -u +"%Y-%m-%d")

          # Decide commit count
          if [ $((10#$DAY % 2)) -eq 0 ]; then
            COMMITS=2
          else
            COMMITS=$(( (RANDOM % 3) + 3 ))  # 3 to 5 commits
          fi

          echo "Today is $DATE → Planning $COMMITS commits."

          MESSAGES=(
            "Keep building — progress compounds."
            "Code. Commit. Grow."
            "Every small step leads somewhere great."
            "Innovation loves consistency."
            "Legacy in the making."
            "Discipline today, dominance tomorrow."
            "You're coding your future."
            "Bernard, the world remembers the consistent ones."
            "Just improving things quietly."
            "Writing code, writing history."
          )

          # Simulated commit times (minutes between commits)
          INTERVALS=(60 120 180 240 300)  # 1h–5h spacing

          for ((i=1; i<=COMMITS; i++)); do
            TIME=$(date -u +"%H:%M:%S UTC")
            MSG=${MESSAGES[$RANDOM % ${#MESSAGES[@]}]}
            echo "- **$DATE $TIME** — $MSG (commit $i/$COMMITS)" >> daily-log.md
            git add daily-log.md
            git commit -m "Auto-log: $DATE $TIME (commit $i/$COMMITS) — $MSG"

            # Random sleep between commits to spread them through the day
            if [ $i -lt $COMMITS ]; then
              SLEEP=${INTERVALS[$RANDOM % ${#INTERVALS[@]}]}
              echo "Sleeping for $SLEEP minutes before next commit..."
              sleep $((SLEEP * 60))
            fi
          done

          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}
          git push origin HEAD:$(git rev-parse --abbrev-ref HEAD)
